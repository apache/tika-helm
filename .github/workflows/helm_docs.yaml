# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Update Chart Metadata

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

jobs:
  update-chart-metadata:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.5
        with:
          fetch-depth: 0
      - name: Setup Helm Docs
        run: |
          set -euo pipefail

          if [[ "$VERSION" == latest ]]; then
            VERSION=
          fi

          case "${{ runner.os }}" in
            Linux)
              OS=linux
              FILENAME=helm-docs
              ;;
            macOS)
              OS=darwin
              FILENAME=helm-docs
              ;;
            Windows)
              OS=windows
              FILENAME=helm-docs.exe
              ;;
          esac

          RELEASE="$(gh release view --json=name,assets $VERSION)"
          VERSION="$(jq -r '.name' <<<"$RELEASE")"
          echo "version=$VERSION" >>$GITHUB_OUTPUT
          echo "Installing helm-docs $VERSION..."

          DEST="$RUNNER_TEMP/helm-docs"
          ASSET="$(jq -r --arg OS "$OS" \
            '.assets[].name | select(ascii_downcase | test($OS + "_(amd64|x86_64).(tar.gz|zip)$"))' \
            <<<"$RELEASE" \
          )"

          echo "Downloading $ASSET"
          mkdir -p "$DEST"
          cd "$DEST"
          case "$ASSET" in
            *.tar.gz)
              gh release download "$VERSION" --pattern="$ASSET" --output=- | tar -xzf - "$FILENAME" ;;
            *.zip)
              gh release download "$VERSION" --pattern="$ASSET"
              unzip -o "$ASSET" "$FILENAME"
              rm "$ASSET"
              ;;
            *)
              echo Invalid file type; exit 1;;
          esac
          echo "$DEST" >>$GITHUB_PATH
      - name: Run helm-docs
        run: |
          helm-docs -x
          if git diff --exit-code; then
            echo "Documentation up to date"
          else
            echo "Documentation outdated. Run helm-docs (https://github.com/norwoodj/helm-docs?tab=readme-ov-file#installation) locally and commit changes."
            exit 1
          fi
